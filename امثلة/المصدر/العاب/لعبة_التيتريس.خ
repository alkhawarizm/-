							بسم الله الحكيم الخبير

							(۩	
								جميع الحقوق محفوظة © 2019	الخوارزم   Copyright  alkhawarizm.org   
								الكاتب : محمد .ه								
								مرخصة بموجب رخصة أباتشي ، الإصدار 2.0 ("الترخيص") ؛
							 لا يجوز لك استخدام هذا الملف إلا وفقًا للترخيص. يمكنك الحصول على نسخة من الترخيص في

							 https://www.apache.org/licenses/LICENSE-2.0

							 ما لم يكن مطلوبًا بموجب القانون المعمول به أو المتفق عليه كتابيًا أو  يتم توزيع البرنامج بموجب الترخيص على أساس "كما هي" ،
							دون أي ضمانات أو شروط من أي نوع ، سواء كانت صريحة أو ضمنية.  انظر الترخيص للأذونات التي تحكم لغة معينة و القيود بموجب الترخيص.
								۩)	
							
الرزمة	 العاب


استعمل الخوارزم.رسم.نافذة
استعمل الخوارزم.وسائط.شاشة
استعمل الخوارزم.وسائط.لوحة_المفاتيح
استعمل الخوارزم.نظام.تفاعل
استعمل الخوارزم.وسائل

استعمل	الخوارزم.وسائط.صوت

الصنف  لعبة_التيتريس  {

		المتغير	حالة_اللعبة  صحيح :=  مسرح_اللعبة
		المتغير سرعة_السقوط، حجم_الكتلة(۩، مهلة_القفل، مهلة_الازاحة، سرعة_الازاحة ۩) صحيح جامد := 5، 16؛(۩، 30، 20، 4۩) 	
		المتغير سرعة_الكتلة ، وقت_الكتلة  صحيح :=  السرعة_البدئية ،0
		المتغير اطار_زمني صحيح طبيعي := 0
		المتغير طول_المسرح 		 صحيح 		جامد := 10
		المتغير ارتفاع_المسرح 		 صحيح 		جامد := 20	
		المتغير مسرح[10][20]  صحيح		
		المتغير كيس_عشوائي[7]  صحيح	
		المتغير عد_الاكياس  صحيح	:= 0
		المتغير امسكت_شيئا منطقي := خطا
		المتغير ممسكة منطقي := خطا	
		المتغير تنفيذ منطقي := صواب
		المتغير توقف منطقي := خطا		
		المتغير سقوط منطقي := خطا			
		المتغير	النتيجة ، السطور_الممسوحة، اجمالي_السطور، المستوى، المستوى_التالي صحيح := 0، 0، 0، 1، عدد_السطور_لكل_مستوى		
		المتغير طول_الشاشة صحيح				
		المتغير ارتفاع_الشاشة صحيح 
		المتغير حجم_الخط صحيح																
		المتغير المسرح_ا صحيح 	
		المتغير المسرح_ب صحيح 	
		المتغير ا_الطابور صحيح 		
		المتغير ب_الطابور صحيح 
		المتغير ا_امساك صحيح  			
		المتغير ب_امساك صحيح 	
		المتغير حروف[256] حرف 				
		المتغير اتجاه_التحول، تحول_تلقائي صحيح := 0، مدة_التحويل		

		النوع قطعة شيء {
			ا، ب 		صحيح8 
			نوعها 		 صحيح8 طبيعي
			قلب		 صحيح8 طبيعي
		}؛

		المتغير قطعة_، قطعة_ممسكة  قطعة؛
		المتغير طابور [5]  قطعة؛

		المتغير وصف_القطعة 	[7][4]	صحيح16 طبيعي  := [[0ز0000011001100000،0ز0000011001100000،0ز0000011001100000،0ز0000011001100000]،
													  [0ز0100010001000100،	0ز0000111100000000،	0ز0010001000100010،	0ز0000000011110000]،
													  [0ز0110010001000000،	0ز0000111000100000،	0ز0100010011000000، 0ز1000111000000000]،
													  [0ز0100010001100000،0ز0000111010000000،0ز1100010001000000،0ز0010111000000000]،
													  [0ز0110110000000000،0ز0100011000100000،0ز0000011011000000،0ز1000110001000000]،
													  [0ز1100011000000000،0ز0010011001000000،0ز0000110001100000،0ز0100110010000000]،
													  [0ز0100111000000000،0ز0100011001000000،0ز0000111001000000،0ز0100110001000000]،
													  ]


	  المتغير قيم_حالة_اللعبة  سرد { عنوان_اللعبة   := 0، خطارات_اللعبة   := 1،مسرح_اللعبة   := 2، نهاية_اللعبة   := 3}؛


		المتغير قيم_معيارية  سرد {
			نقطة_السقوط_المعتدل := 1،
					نقطة_السقوط_السريع := 2،										
					مدة_التحويل   := 10،	
					عدد_السطور_لكل_مستوى := 20،				
					مهلة_القفل := 30،								
					مدة_الانتظار := 30، 	السرعة_البدئية := 30	،
					نقطة_احادية := 100، 
					نقطة_ثنائية := 300،
					نقطة_ثلاثية := 500،
					نقطة_اعلى := 800،
					نقطة_اعلى_مضاعفة := 1200/

		}؛	

		المتغير مفاتيح لوحة_المفاتيح::صفرة_المسح

		(۩۩	تحصيل المفاتيح		۩۩)		
		الدالة تحصيل_المفاتيح() صحيح  {

			المتغير حدث_	 تفاعل::حدث := {0}؛	
			المتغير نوع_حدث صحيح := 0
			المتغير	حالات  ۢصحيح8 طبيعي

					حالات  := 	لوحة_المفاتيح::حالة_لوحة_المفاتيح(عدم)	
					
					اذا حالات	[لوحة_المفاتيح::الصفرة_هروب]  ليس= 0_ط8 {
						ارجع 1		
					}

					ارجع 0
		}			


		(۩۩	تهيئة النهاية		۩۩)
		الدالة النهاية() {
			صوت::نهاية_تهيئة_الصوت()									
			نافذة::نهاية()						
		}		



		(۩۩	ملء كيس عشوائي		۩۩)
		الدالة ملء_كيس_عشوائي() {

			المتغير ا صحيح  := 0
					المتغير ب صحيح  := 0		
					المتغير 	صندوق [7] صحيح  := [0، 1، 2، 3، 4، 5، 6]

													لاجل ا := 0؛ا < 7؛ا++ {
														ب := وسائل::عدد_عشوائي() نمط (7 - ا)؛	
																كيس_عشوائي[ا] := صندوق[ب]؛	
																لاجل ب := 0؛ب < 6؛ب++ {
																	صندوق[ب] := صندوق[ب + 1]						
																}
													}
													عد_الاكياس := 0				
		}	

		(۩۩	اعداد تشغيل اللعبة		۩۩)
		الدالة اعداد_تشغيل_اللعبة() {
			المتغير ا صحيح  := 0
			المتغير ب صحيح  := 0

					لاجل ا := 0؛ا < طول_المسرح؛ا++ {
						لاجل ب := 0؛ب < ارتفاع_المسرح؛ب++ {
							مسرح[ا][ب] := 0
						}
					}
					ملء_كيس_عشوائي	()	

					قطعة_.نوعها := 	كيس_عشوائي[عد_الاكياس++]
					 قطعة_.قلب := 0
					 قطعة_.ا := 3
					 قطعة_.ب := -2
					 لاجل ا:= 0؛ ا< 5؛ ا++ {
						 طابور [ا].نوعها := كيس_عشوائي[عد_الاكياس++]
						 طابور [ا].قلب := 0						
					 }
					 امسكت_شيئا	:= 	خطا   
							 ممسكة	:= 	خطا	
							 النتيجة := 0 ، السطور_الممسوحة:= 0 ، اجمالي_السطور:= 0 ، المستوى:= 1 ،
							 المستوى_التالي:= عدد_السطور_لكل_مستوى 	
							 اعادة_تعيين_السرعة()				
							 تحول_الى_القطعة_التالية		()
							 حالة_اللعبة	 :=	مسرح_اللعبة					


		}		

		(۩۩	تثبيت القطعة على المسرح وانتاج اخرى	۩)	
		الدالة تثبيت_القطعة()		 {

			المتغير ا صحيح  := 0؛	
					المتغير ب صحيح  := 0؛
					المتغير عدد_السطور_الممسوحة  صحيح  := 0؛	
					المتغير المكافأة صحيح  := 0؛		
					المتغير مملوء صحيح := 0؛	

					لاجل ا := 0؛ا < 4؛ا++ {
						لاجل ب := 0؛ب < 4؛ب++ {
							اذا ( وصف_القطعة[قطعة_.نوعها][قطعة_.قلب] وو قناع_الكتلة  (ا، ب))  ليس= 0_ط {
								مسرح[قطعة_.ا + ا كما صحيح8 ][قطعة_.ب + ب كما صحيح8] := قطعة_.نوعها + 1ط8
							}
						}
					}
					عدد_السطور_الممسوحة := 0؛
							لاجل ا := 0؛ا <ارتفاع_المسرح ؛ا++ {
								مملوء		:= 0؛		
										لاجل ب := 0؛ب < طول_المسرح؛ب++ {	
											اذا مسرح[ب][ا] > 0 {
												مملوء++؛
											}
										}
										اذا مملوء = 	طول_المسرح		{
											ازالة_السطر	(ا)؛	
													عدد_السطور_الممسوحة++؛
										}
							}

							(۩ المكافأة ۩)					
							اذا قطعة_.نوعها = 7ط8  و كشف_الدوران(قطعة_) {
							} والا {
								المتغير ق قطعة := قطعة_
										اذا ق.نوعها = 7ط8 و ركلة_الجدار(؏ق) {
									اذا عدد_السطور_الممسوحة = 0 {
										المكافأة +:= نقطة_احادية × المستوى									
									}  والا {
										المكافأة +:= نقطة_ثنائية × المستوى
									}
								} والا {
									اذا عدد_السطور_الممسوحة = 1 {
										المكافأة +:= نقطة_احادية × المستوى
									}
									اذا عدد_السطور_الممسوحة = 2 {
										المكافأة +:= نقطة_ثنائية × المستوى
									}
									اذا عدد_السطور_الممسوحة = 3 {
										المكافأة +:= نقطة_ثلاثية × المستوى
									}				
									اذا عدد_السطور_الممسوحة = 4 {
										المكافأة +:= نقطة_اعلى × المستوى 
									}																
								}
							}

							النتيجة+:= المكافأة؛			
									السطور_الممسوحة +:= 	عدد_السطور_الممسوحة؛					
									اجمالي_السطور +:= 	عدد_السطور_الممسوحة؛
									المستوى_التالي -:= عدد_السطور_الممسوحة	؛
									اذا 		المستوى_التالي	 <= 0 {
								المستوى_التالي +:= عدد_السطور_لكل_مستوى؛
										المستوى++؛										
							}

							تحول_الى_القطعة_التالية ()؛					
		}	

		(۩۩	ازالة السطر ذي الرقم سق		۩)
	الدالة ازالة_السطر(سق صحيح) {
			المتغير ا صحيح  := سق؛
					المتغير ب صحيح  := 0؛

					لاجل ا := سق؛ا> 0؛ا-- {
						لاجل ب := 0؛ب < طول_المسرح؛ب++ {	
							مسرح[ب][ا] := مسرح[ب][ا-1] ؛
						}
					}

					لاجل ب := 0؛ب < طول_المسرح؛ب++ {	
						مسرح[0][ب] := 0؛
					}
		}		

		(۩۩	التحقق من الاقفال	۩۩)
		الدالة التحقق_من_الاقفال( ق قطعة)  منطقي	{
			ق.ب++؛
			ارجع 	ليس	التحقق_من_القطعة(ق)؛		

		}		

		(۩۩	تحريك القطعة للاسفل	۩۩)
	الدالة تحريك_القطعة_للاسفل()	 {

			اذا التحقق_من_الاقفال(قطعة_)  = صواب {
				تثبيت_القطعة()		؛			
			}	والا {
				قطعة_.ب++؛
				اذا سقوط {
					النتيجة +:= نقطة_السقوط_المعتدل؛
				}
			}
			وقت_الكتلة := 0؛		
		}		

		(۩۩		قلب القطعة الى اليسار	۩)	
		الدالة ادارة_القطعة_يسارا() {

			المتغير ق	قطعة := قطعة_؛
					اذا ق.قلب = 0ط8 {
				ق.قلب := 3ط8؛
			} والا {
				ق.قلب :=ق.قلب - 1ط8 ؛	
			}

			اذا التحقق_من_القطعة(ق) 	او  ركلة_الجدار (؏ق)	{
				قطعة_ := ق؛ 
						اذا  التحقق_من_الاقفال(قطعة_) {
					وقت_الكتلة := 0؛
				}
			}
		}

		
		(۩۩		قلب القطعة الى اليمين	۩)	
	الدالة ادارة_القطعة_يمينا() {

			المتغير ق	قطعة := قطعة_؛
					اذا ق.قلب = 3ط8 {
				ق.قلب := 0ط8؛
			} والا {
				ق.قلب :=ق.قلب+ 1ط8 ؛	
			}

			اذا التحقق_من_القطعة(ق) 	او  ركلة_الجدار (؏ق)	{
				قطعة_ := ق؛ 
						اذا  التحقق_من_الاقفال(قطعة_) {
					وقت_الكتلة := 0؛
				}
			}
		}			

		(۩۩ اسقاط سريع للقطعة ۩)	
	الدالة اسقاط_سريع() {
			مادام ليس التحقق_من_الاقفال(قطعة_) {
				قطعة_.ب +:= 1ص8؛
						النتيجة +:=  نقطة_السقوط_السريع ؛								
			}
			تثبيت_القطعة()		؛		
		}		

		(۩۩ تحديث السرعة اخذا بعين الاعتبار المستوى ۩)	
		الدالة اعادة_تعيين_السرعة() {
			سرعة_الكتلة	 := السرعة_البدئية - (المستوى × 5)
			اذا 	سرعة_الكتلة < سرعة_السقوط 	 {
				سرعة_الكتلة := سرعة_السقوط
			}
		}

		الدالة تحول_الى_القطعة_التالية() {
			المتغير ا صحيح  := 0؛			
					قطعة_ := طابور[0]؛
					قطعة_.ا := 3؛
					قطعة_.ب := -2؛			
					لاجل ا:= 0؛ ا< 4؛ ا++ {
						طابور[ا] := طابور[ا+1]
					}

					طابور[4].نوعها :=  كيس_عشوائي[عد_الاكياس++]؛	
							اذا عد_الاكياس = 7 {
						ملء_كيس_عشوائي	()؛		
					}
					ممسكة		:= خطا؛ (۩ تمكين الاعب من امساك القطعة التالية ۩)

																		اذا ليس التحقق_من_القطعة(قطعة_)   {
						حالة_اللعبة	 :=	نهاية_اللعبة؛ 				 
					}					 
					اعادة_تعيين_السرعة()؛	
		}		
		(۩۩		التحقق من ان القطعة ق تتداخل مع باقي القطع	۩)
		الدالة التحقق_من_القطعة(ق قطعة ) منطقي {
			المتغير ا صحيح  := 0؛	
					المتغير ب صحيح  := 0؛
					المتغير ا1 صحيح  := 0؛
					المتغير ا2 صحيح  := 0؛

					لاجل ا := 0؛ا < 4؛ا++ {
						لاجل ب := 0؛ب < 4؛ب++ {
							ا1	 := ق.ا  كما صحيح + ا ؛
									ا2	  := ق.ب  كما صحيح + ب ؛
									اذا ( وصف_القطعة[ق.نوعها][ق.قلب] وو قناع_الكتلة  (ا، ب))  ليس= 0_ط {
										اذا ا1 < 0 او ا1 >=  طول_المسرح او ا2 >= ارتفاع_المسرح {
											ارجع خطا؛
										}
										اذا ا2 >= 0 و مسرح[ا1][ا2] > 0 {
											ارجع خطا؛
										}					
									}
						}		
					}
					ارجع صواب؛		
		}



		النوع لون شيء {
			ح، خ، ز 		صحيح 
		}؛

		المتغير لون_القطعة	[8]	لون := [[0، 255، 255 ]،[255، 255 ، 0]،[0 ،0 ، 255 ]،[ 0، 255، 0 ]،
										[255، 0 ، 0]،[ 0، 255، 255 ]،[255، 165، 0 ]،
										[60، 60، 60]]؛
										(۩۩		تحديد لون القطعة	۩۩)
										الدالة تحديد_لون_القطعة( ل صحيح) {

			نافذة::لون(لون_القطعة[ل].ح ، لون_القطعة[ل].خ ،لون_القطعة[ل].ز، 255)؛	
		}					



		(۩۩		لوحة المفاتيح	۩۩)
		المتغير مفتاح ، مفتاح_سابق شيء {
			فوق،  اسفل، يسار، يمين ، ث، ز ، تحول، مساحة، رجوع، هروب	صحيح8 طبيعي
		}؛
		(۩۩	تحديث المدخلات	۩۩)
		الدالة تحديث_المدخلات() 	منطقي	{
			المتغير حدث	تفاعل::حدث ؛
			المتغير	حالات  ۢصحيح8 طبيعي؛

			مادام 		تفاعل::استطلع_الاحداث(؏حدث)  = صواب {
				اذا  حدث.نوعه =  تفاعل::رقم_حدث_الخروج() {
					ارجع صواب؛
				}
				اذا  حدث.نوعه =  تفاعل::رقم_زر_الناقر_تحث() 	{
					اذا   حدث.حدث_زر_النقر.زر = 1ط8 {
						ادارة_القطعة_يسارا()؛
					} والا {
						ادارة_القطعة_يمينا()؛
					}
					شاشة::اكتب("نقر الزر :  ")												
					شاشة::اكتب(حدث.حدث_زر_النقر.زر)
					شاشة::اكتب("/س")	
				}	

				اذا حدث.حدث_زر_النقر.نقرات = 2ط8 {
					امساك_قطعة()؛
				}									
				اذا  حدث.نوعه =  تفاعل::رقم_حركة_الناقر() {
					شاشة::اكتب(حدث.حدث_زر_النقر.احداثية_ا)
					شاشة::اكتب(" : ")
					شاشة::اكتب(حدث.حدث_زر_النقر.احداثية_ب)
					شاشة::اكتب("/س")											
				}	
				اذا  حدث.نوعه =  تفاعل::رقم_عجلة_الناقر() 	{
					اذا حدث.حدث_عجلة_النقر.احداثية_ب < 0 {
						اسقاط_سريع()؛
					}											
				}									
			}			
			مفتاح_سابق.يسار := مفتاح.يسار		؛
					مفتاح_سابق.يمين	:= مفتاح.يمين؛
					مفتاح_سابق.فوق := مفتاح.فوق؛
					مفتاح_سابق.اسفل := مفتاح.اسفل؛		
					مفتاح_سابق.ث := مفتاح.ث؛			
					مفتاح_سابق.ز := مفتاح.ز؛		
					مفتاح_سابق.تحول := مفتاح.تحول؛	
					مفتاح_سابق.مساحة := مفتاح.مساحة؛	
					مفتاح_سابق.رجوع := مفتاح.رجوع؛
					مفتاح_سابق.هروب := مفتاح.هروب؛		

					حالات  := 	لوحة_المفاتيح::حالة_لوحة_المفاتيح(عدم)	

				مفتاح.يسار := حالات	[ لوحة_المفاتيح::الصفرة_يسار]	
				 مفتاح.يمين	:= حالات	[ لوحة_المفاتيح::الصفرة_يمين]	
				 مفتاح.فوق := حالات	[ لوحة_المفاتيح::الصفرة_فوق]	
				 مفتاح.اسفل :=حالات	[ لوحة_المفاتيح::الصفرة_اسفل]	
				 مفتاح.ث := حالات	[ لوحة_المفاتيح::الصفرة_ث]	
				 مفتاح.ز := حالات	[ لوحة_المفاتيح::الصفرة_ز]	
				 مفتاح.تحول := حالات	[ لوحة_المفاتيح::الصفرة_تحول]	
																																																													  ارجع خطا؛		
		}		


		(۩۩		التحديث الاساسي. يعالج الاحداث و الاستعداءات مع الاخذ بالاعتبار المفاتيح المدخلة	۩)
		الدالة تحديث()  	{
			اذا تحديث_المدخلات() او مفتاح.هروب ليس= 0ط8 {
				تنفيذ		:= خطا؛
			}	

			اذا 		حالة_اللعبة = مسرح_اللعبة {
				تحديث_المرحلة()		؛			
			}
			والا اذا حالة_اللعبة = نهاية_اللعبة {
				تحديث_نهاية_اللعبة()؛				
			}			
		}
		(۩۩	 شاشة نهاية اللعبة	۩)
		الدالة تحديث_نهاية_اللعبة() {
			اذا مفتاح.رجوع ليس= 0ط8  و	 مفتاح_سابق.رجوع = 0ط8  و حالة_اللعبة = نهاية_اللعبة {
				اعداد_تشغيل_اللعبة()؛
			}
		}

		(۩۩		تحديث الافعال عندما تلعب اللعبة		۩۩)	
		الدالة تحديث_المرحلة() {
			اذا مفتاح.رجوع ليس= 0ط8  و	 مفتاح_سابق.رجوع = 0ط8 {
				توقف := ليس توقف؛								
			}


			اذا توقف {
				ارجع
			}
			(۩		تحرك اليسار واليمين	۩)
			اذا مفتاح.يسار ليس= 0ط8  و	 مفتاح_سابق.يسار = 0ط8 {
				تحريك_الى_اليسار()؛
						اتجاه_التحول := -1؛	
						تحول_تلقائي  :=  مدة_التحويل؛					
			} والا اذا  مفتاح.يمين ليس= 0ط8  و	 مفتاح_سابق.يمين = 0ط8 	{
				تحريك_الى_اليمين()؛
						اتجاه_التحول := 1؛
						تحول_تلقائي  :=  مدة_التحويل؛					
			}
			(۩		تأخر التحول التلقائي	۩)
			اذا (مفتاح.يمين- 	 مفتاح_سابق.يسار)	 كما  صحيح 	= اتجاه_التحول {
				تحول_تلقائي--؛
				اذا 		تحول_تلقائي	 = 0 {
					تحول_تلقائي  :=  مدة_التحويل؛	
							اذا 		مفتاح.يسار		ليس= 0ط8 {
						تحريك_الى_اليسار()؛
					} والا اذا مفتاح.يمين ليس= 0ط8 {
						تحريك_الى_اليمين()؛
					}
				}
			}


			اذا مفتاح.ث ليس= 0ط8  و	 مفتاح_سابق.ث = 0ط8 {	
				ادارة_القطعة_يسارا()؛
			}
			اذا مفتاح.ز ليس= 0ط8  و	 مفتاح_سابق.ز = 0ط8 {	
				ادارة_القطعة_يمينا()؛
			}		

			اذا مفتاح.فوق ليس= 0ط8  و	 مفتاح_سابق.فوق = 0ط8 {	
				ادارة_القطعة_يمينا()؛
			}	
			(۩	الرمي والتثبيت	۩)		
			اذا مفتاح.مساحة ليس= 0ط8  و	 مفتاح_سابق.مساحة = 0ط8 {	
				اسقاط_سريع()؛
			}
			(۩		تثبيت القطعة وحفظها لوقت لاحق		۩)				
			اذا مفتاح.تحول ليس= 0ط8  و	 مفتاح_سابق.تحول = 0ط8 {	
				امساك_قطعة()؛

			}				

			اذا مفتاح.اسفل ليس= 0ط8  و	 مفتاح_سابق.اسفل = 0ط8 {	
				تحريك_القطعة_للاسفل()؛
						سرعة_الكتلة := 			سرعة_السقوط؛
						سقوط		:= صواب؛
			} والا اذا		مفتاح_سابق.اسفل ليس= 0ط8  و	 مفتاح.اسفل = 0ط8		{
				تحديث_السرعة() 			
				سقوط		:= خطا 
			}
			(۩۩)	
				وقت_الكتلة ++؛
			اذا 	وقت_الكتلة	>= سرعة_الكتلة {
				اذا  التحقق_من_الاقفال(قطعة_)  ليس= صواب او وقت_الكتلة >= مهلة_القفل  او مفتاح.اسفل ليس= 0ط8 {
					تحريك_القطعة_للاسفل()			 
				}					 
			}
		}		



		(۩۩		امساك تطعة	۩)	
		الدالة امساك_قطعة() {
			اذا ممسكة {
				ارجع
			}
			قطعة_.ا := 3؛ 	قطعة_.ب := 0 
			اذا امسكت_شيئا {
				المتغير ق قطعة := قطعة_
						قطعة_ := قطعة_ممسكة 
						قطعة_ممسكة := ق			
			} والا {
				قطعة_ممسكة := قطعة_
						امسكت_شيئا	:= صواب
						تحول_الى_القطعة_التالية ()				
			}
			ممسكة	:= صواب
		}	

		(۩۩		التحريك الى اليمين	۩)	
		الدالة تحريك_الى_اليمين() {
			المتغير ق قطعة := قطعة_
					ق.ا++؛
			اذا التحقق_من_القطعة	(ق) {
				قطعة_ := ق
				اذا التحقق_من_الاقفال(ق) {
					وقت_الكتلة := 0
				}
			}
		}	
		(۩۩			۩)	
		الدالة كشف_الدوران(ق قطعة ) 	منطقي {
			ارجع مسرح[ق.ا][ ق.ب] > 0  و مسرح[ق.ا + 2ص8 ][ ق.ب] > 0 و  مسرح[ق.ا + 2ص8 ][ ق.ب + 2ص8] > 0/
			و  مسرح[ق.ا  ][ ق.ب + 2ص8] > 0			
		}		

		(۩۩		التحريك الى اليسار	۩)	
		الدالة تحريك_الى_اليسار() {
			المتغير ق قطعة := قطعة_ 
					ق.ا--
			اذا التحقق_من_القطعة	(ق) {
				قطعة_ := ق
				اذا التحقق_من_الاقفال(ق) {
					وقت_الكتلة := 0
				}
			}
		}			


		(۩۩		اظهار القطعة الشبح/الظل للمساعدة 	۩)	
		الدالة القطعة_الظل(ق قطعة) 		قطعة	{
			مادام  التحقق_من_الاقفال(ق) ليس= صواب {
				ق.ب++

			}
			ارجع ق		
		}			

		الدالة ركلة_الجدار(ق  ۢقطعة) منطقي {
			(۩يسار۩)
			 ق->ا -:= 1ص8؛
			 اذا التحقق_من_القطعة		   ( ڨ ق) {
				ارجع صواب؛
			}
			ق->ا +:= 2ص8
					
			اذا التحقق_من_القطعة		 ( ڨ  ق) {
				ارجع صواب؛
			}		
			ق->ا -:= 1ص8؛
					ق->ب -:= 1ص8؛			 
			اذا التحقق_من_القطعة		 (  ڨ ق) {
				ارجع صواب؛
			}
			ق->ب +:= 1ص8	
					ارجع خطا				 
		}		

		(۩۩ يضبط سرعة السقوط بناءً على المستوى الحالي۩)
		الدالة تحديث_السرعة() {
			سرعة_الكتلة := السرعة_البدئية - (المستوى × 5) 
			اذا 	سرعة_الكتلة	 < 	سرعة_السقوط	{
				سرعة_الكتلة := سرعة_السقوط
			}
		}


		الدالة قناع_الكتلة(ا صحيح ، ب صحيح)		صحيح16 طبيعي {
			ارجع 0س8000 >> (ا+ب×4)
		}	

		
		الدالة التهيىئة() {
				حجم_الخط := 20												
					طول_الشاشة   :=  22 × حجم_الكتلة			
					ارتفاع_الشاشة   :=  24 × حجم_الكتلة	
					المسرح_ا   :=  6 × حجم_الكتلة	
					المسرح_ب   :=  2 × حجم_الكتلة
					ا_الطابور   :=17×حجم_الكتلة
					ب_الطابور   :=  2 × حجم_الكتلة
					ا_امساك   :=  1 × حجم_الكتلة			
					ب_امساك   :=  2 × حجم_الكتلة					

					نافذة::تهياة_الرسم("لعبة الرباعيات المتساقطة				  -   التيترس"،طول_الشاشة، ارتفاع_الشاشة)

					(۩		انات_مىساص("م.فلأص")؛			۩)															
					اذا	صوت::تهيئة_الصوت("1.1")= 0 {

						شاشة::اكتب("خطا عند تهيئة الصوت/س")					
					}								
	 
					اطار_زمني	:= نافذة::تاريخ_التهيئة()	
					اعداد_تشغيل_اللعبة	()	

		}	


		الدالة انتظار() {
			اذا ( نافذة::تاريخ_التهيئة()  - اطار_زمني) كما صحيح < مدة_الانتظار	 {
				نافذة::تأجيل(مدة_الانتظار)
			} 
			(۩	نافذة::مسح()؛۩)
																	اطار_زمني	:= نافذة::تاريخ_التهيئة()		
		}	


		(۩۩		رسم قطعة 	۩۩)
		الدالة رسم_قطعة(ق قطعة، ث صحيح، ي صحيح، ظل منطقي) {
			المتغير ا صحيح  := 0	
					المتغير ب صحيح  := 0

					تحديد_لون_القطعة(	ظل	؟ 7 : ق.نوعها	 كما صحيح)				

					لاجل ا := 0؛ا < 4؛ا++ {
						لاجل ب := 0؛ب < 4؛ب++ {
							اذا ( وصف_القطعة[ق.نوعها][ق.قلب] وو قناع_الكتلة  (ا، ب))  ليس= 0_ط{
								اذا ق.ب كما صحيح + ب < 0 {
									استانف؛
								}
								نافذة::مستطيل_ملء(ث+ا×حجم_الكتلة+1،  ي + ب× حجم_الكتلة+1، حجم_الكتلة-2   ، حجم_الكتلة-2 )؛	
							}
						}
					}


		}		


		(۩۩		رسم نهاية اللعبة	۩۩)
	الدالة ارسم_نهاية_اللعبة() {
			نافذة::لون(255، 0،0، 255)؛
					نافذة::كتابة_خط("نِهَايَةُ اللُعْبَة"،المسرح_ا   +حجم_الكتلة ، المسرح_ب+ (5 ×حجم_الكتلة ) ، 50،  طول_الشاشة ، ارتفاع_الشاشة)؛			
		}		
		(۩۩		ارسم المرحلة	۩۩)
		الدالة ارسم_المرحلة() {
			المتغير ا صحيح  := 0؛	
					المتغير ب صحيح  := 0؛
					المتغير ص صحيح  := 0؛	
					المتغير قطعة_الظل قطعة؛	

					لاجل ا := 0؛ا < 10؛ا++ {
						لاجل ب := 0؛ب < 20؛ب++ {
							اذا  مسرح[ا][ب] = 0 {
								استانف
							}
							ص:= مسرح[ا][ب] -1؛	
									تحديد_لون_القطعة(ص)؛									
									نافذة::مستطيل_ملء(ا×حجم_الكتلة+المسرح_ا + 1،  ب× حجم_الكتلة+المسرح_ب + 1، حجم_الكتلة-2   ، حجم_الكتلة-2 )؛	
						}
					}
					(۩ رسم قطعة الظل	۩)	
									قطعة_الظل := 	القطعة_الظل(قطعة_)؛
									رسم_قطعة(قطعة_الظل،قطعة_الظل.ا كما صحيح × حجم_الكتلة + المسرح_ا،قطعة_الظل.ب كما صحيح × حجم_الكتلة + المسرح_ب، صواب  )؛
									(۩ رسم القطعة الحالية	۩)	
									رسم_قطعة(قطعة_،قطعة_.ا كما صحيح × حجم_الكتلة + المسرح_ا،قطعة_.ب كما صحيح × حجم_الكتلة + المسرح_ب، خطا  )؛				

									لاجل ا := 0؛ا < 5؛ا++ {
										رسم_قطعة(طابور[ا]، ا_الطابور، ا × (حجم_الكتلة×4)+ ب_الطابور، خطا)؛
												(۩	۩)						
									}

									اذا امسكت_شيئا {
										رسم_قطعة(قطعة_ممسكة، ا_امساك، ب_امساك، خطا)؛
									}

		}		

		
		الدالة ارسم() {


					نافذة::لون_الخلفية (65، 158، 235، 255)؛		
					نافذة::مستطيل_ملء(0،0، طول_الشاشة،ارتفاع_الشاشة)؛																		
					نافذة::لون(0، 0، 0، 255)؛
					نافذة::مستطيل_ملء(المسرح_ا، المسرح_ب، طول_المسرح×حجم_الكتلة،ارتفاع_المسرح ×حجم_الكتلة)؛	
					(۩	نافذة::اظهر_صورة( "بغ.جِغ"   ، المسرح_ا، المسرح_ب، طول_المسرح×حجم_الكتلة،ارتفاع_المسرح ×حجم_الكتلة)؛۩)

					نافذة::مستطيل_ملء(ا_الطابور، ب_الطابور، 4×حجم_الكتلة ،4×5 ×حجم_الكتلة)؛
					نافذة::مستطيل_ملء(ا_امساك،  ب_امساك ، 4×حجم_الكتلة،4 ×حجم_الكتلة)؛	

					نافذة::لون(255،255، 255، 255)؛					
					نافذة::كتابة_خط("النتيجة : "،ارتفاع_المسرح ×حجم_الكتلة\2 ، 0 ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)				؛
					وسائل::صحيح_الى_حروف(النتيجة، حروف، 10)؛
					نافذة::كتابة_خط(حروف،ارتفاع_المسرح ×حجم_الكتلة\2 -  حجم_الكتلة × 3 ، 0 ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)				؛				 
					نافذة::كتابة_خط("الطابور"،ا_الطابور، 0 ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)				؛	
					نافذة::كتابة_خط("الاحتفاظ"،ا_امساك، 0 ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)				؛	
					نافذة::كتابة_خط("المستوى"،ا_امساك، ب_امساك + (5 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛
					وسائل::صحيح_الى_حروف(المستوى، حروف، 10)؛				
					نافذة::كتابة_خط(حروف،ا_امساك +حجم_الكتلة، ب_امساك + (7 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛				
					نافذة::كتابة_خط("التالي"،ا_امساك، ب_امساك + (10 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛	
					وسائل::صحيح_الى_حروف(المستوى_التالي، حروف، 10)؛	
					نافذة::كتابة_خط(حروف،ا_امساك +حجم_الكتلة، ب_امساك + (12 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛					
					نافذة::كتابة_خط("المجموع"،ا_امساك، ب_امساك + (15 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛
					وسائل::صحيح_الى_حروف(اجمالي_السطور، حروف، 10)؛				
					نافذة::كتابة_خط(حروف،ا_امساك +حجم_الكتلة ، ب_امساك + (17 ×حجم_الكتلة ) ، حجم_الخط،  طول_الشاشة ، ارتفاع_الشاشة)؛		

					اذا 		حالة_اللعبة = مسرح_اللعبة {
				ارسم_المرحلة()؛
			} والا اذا حالة_اللعبة = نهاية_اللعبة {
				ارسم_نهاية_اللعبة()؛
			}
			نافذة::عرض()؛

					(۩		تحصيل المفاتيح		۩)								
					اذا  	تحصيل_المفاتيح() = 1 {
				تنفيذ := خطا؛
			}	
			(۩					۩)								
											اذا 	صوت::اطلاق_الصوت() < 0 {
				شاشة::اكتب("خطا عند اطلاق الصوت/س")؛			
			}	
			انتظار()	؛			
		}

	
		الدالة اطلاق() {
			(۩	مؤقت۩)
							(۩		شاشة::تعطيل_التخزين()؛			۩)				
			التهيىئة()؛
			مادام تنفيذ  {
				تحديث()؛			
				ارسم() ؛
							 }
			النهاية()؛
		}
		
		(۩۩			الاصــــــــــــــــــــــــــــــــــــــــــــــــــــــــل	

		الدالة الاصل()	{
				لعبة_التيتريس::اطلاق()
		}		۩۩)	   		
		
}		

					